---
import Header from "../components/header/Header.astro";
import Footer from "../components/Footer.astro";
import { getLangFromUrl, useTranslations } from "../i18n/utils";

// Props pour le layout
interface Props {
  title?: string;
  description?: string;
  ogImage?: string;
  noindex?: boolean;
}

// Détecter la langue depuis l'URL
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Récupérer les props avec valeurs par défaut
const {
  title,
  description,
  ogImage = "/assets/og-default.jpg",
  noindex = false,
} = Astro.props as Props;

// Construction du titre final
const siteTitle = "sebc.dev";
const finalTitle = title ? `${title} | ${siteTitle}` : siteTitle;
const finalDescription = description || t("meta.description.home");

// URL canonique
const baseUrl = "https://sebc.dev"; // À adapter selon votre domaine
const canonicalUrl = new URL(Astro.url.pathname, baseUrl).href;
---

<html lang={lang}>
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Titre et métadonnées de base -->
    <title>{finalTitle}</title>
    <meta name="description" content={finalDescription} />
    <meta name="language" content={lang} />
    
    <!-- URL canonique -->
    <link rel="canonical" href={canonicalUrl} />
    
    <!-- Directive robots -->
    {noindex && <meta name="robots" content="noindex, nofollow" />}
    
    <!-- Open Graph / Facebook -->
    <meta property="og:title" content={finalTitle} />
    <meta property="og:description" content={finalDescription} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:image" content={new URL(ogImage, baseUrl).href} />
    <meta property="og:locale" content={lang === "fr" ? "fr_FR" : "en_US"} />
    <meta property="og:site_name" content="sebc.dev" />
    
    <!-- Twitter Cards -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={finalTitle} />
    <meta name="twitter:description" content={finalDescription} />
    <meta name="twitter:image" content={new URL(ogImage, baseUrl).href} />
    
    <!-- Slot pour métadonnées additionnelles -->
    <slot name="head" />
  </head>
  <body class="relative" data-cy="app-body">
    <!-- Grille de fond avec fondu -->
    <div class="grid-background" data-cy="grid-background"></div>
    <Header />
    <main data-cy="main-content">
      <slot />
    </main>
    <Footer />
  </body>
</html>

<style>
  .grid-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    z-index: -1;
    pointer-events: none;
    
    /* CSS Variables pour unifier la configuration */
    --grid-size: 24;
    --grid-stroke-width: 0.4;
    --grid-opacity: 0.25;
    --grid-bg-url: url("/assets/grid-pattern.svg");
    --mask-start: rgba(0, 0, 0, 1);
    --mask-mid-high: rgba(0, 0, 0, 0.9);
    --mask-mid: rgba(0, 0, 0, 0.7);
    --mask-mid-low: rgba(0, 0, 0, 0.4);
    --mask-low: rgba(0, 0, 0, 0.1);
    --mask-end: rgba(0, 0, 0, 0);
    
    /* Grille optimisée avec fichier SVG externe - Meilleure maintenabilité */
    background-image: var(--grid-bg-url);
    background-size: calc(var(--grid-size) * 1px) calc(var(--grid-size) * 1px);
    background-attachment: local;
    background-repeat: repeat;

    /* Effet de fondu doux vers le bas - Visibilité maximisée */
    mask: linear-gradient(
      to bottom,
      var(--mask-start) 0%,
      var(--mask-mid-high) 15%,
      var(--mask-mid) 35%,
      var(--mask-mid-low) 60%,
      var(--mask-low) 80%,
      var(--mask-end) 95%
    );
    -webkit-mask: linear-gradient(
      to bottom,
      var(--mask-start) 0%,
      var(--mask-mid-high) 15%,
      var(--mask-mid) 35%,
      var(--mask-mid-low) 60%,
      var(--mask-low) 80%,
      var(--mask-end) 95%
    );
  }

  /* Adaptation pour les petits écrans */
  @media (max-width: 768px) {
    .grid-background {
      --grid-size: 20;
      --grid-stroke-width: 0.35;
      --grid-opacity: 0.2;
      /* Réutilisation de la même variable pour maintenir la cohérence */
      background-image: var(--grid-bg-url);
    }
  }

  /* Mode motion réduit - performance optimisée */
  @media (prefers-reduced-motion: reduce) {
    .grid-background {
      /* Désactiver complètement le background pour une performance maximale */
      display: none;
    }
  }

  /* Optimisation pour les appareils low-end */
  @media (max-width: 480px) and (max-height: 800px) {
    .grid-background {
      /* Configuration unifiée pour très petits écrans */
      --grid-size: 16;
      --grid-stroke-width: 0.3;
      --grid-opacity: 0.18;
      --mask-start: rgba(0, 0, 0, 0.9);
      --mask-mid: rgba(0, 0, 0, 0.3);
      --mask-end: rgba(0, 0, 0, 0);
      
      /* Réutilisation cohérente du même fichier SVG */
      background-image: var(--grid-bg-url);
      
      /* Masque optimisé pour visibilité mobile */
      mask: linear-gradient(
        to bottom,
        var(--mask-start) 0%,
        var(--mask-mid) 50%,
        var(--mask-end) 80%
      );
      -webkit-mask: linear-gradient(
        to bottom,
        var(--mask-start) 0%,
        var(--mask-mid) 50%,
        var(--mask-end) 80%
      );
    }
  }
</style>

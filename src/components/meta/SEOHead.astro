---
import { getLangFromUrl, useTranslations } from "@/i18n/utils";
import { siteConfig, siteUtils } from "@/config/site";

interface Props {
  title?: string;
  description?: string;
  titleTemplate?: string;
  ogTitle?: string;
  ogDescription?: string;
  ogImage?: string;
  ogType?: "website" | "article";
  canonicalUrl?: string;
  noindex?: boolean;
  publishedTime?: string;
  modifiedTime?: string;
  author?: string;
  tags?: string[];
}

const {
  title,
  description,
  titleTemplate = `%s | ${siteConfig.title}`,
  ogTitle,
  ogDescription,
  ogImage = siteConfig.defaultOgImage,
  ogType = "website",
  canonicalUrl,
  noindex = false,
  publishedTime,
  modifiedTime,
  author,
  tags = [],
} = Astro.props as Props;

// Système d'internationalisation
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Construction du titre final
const getPageTitle = () => {
  if (!title) {
    return siteConfig.title; // Titre par défaut du site
  }

  // Si titleTemplate contient %s, on remplace par le titre
  if (titleTemplate.includes("%s")) {
    return titleTemplate.replace("%s", title);
  }

  return title;
};

const finalTitle = getPageTitle();
const finalDescription = description || t("meta.description.home");
const finalOgTitle = ogTitle || finalTitle;
const finalOgDescription = ogDescription || finalDescription;

// URL canonique utilisant la configuration centralisée
const finalCanonicalUrl =
  canonicalUrl || siteUtils.getCanonicalUrl(Astro.url.pathname);

// Génération des balises meta pour les tags
const keywordsContent = tags.length > 0 ? tags.join(", ") : undefined;
---

<!-- Titre de la page -->
<title>{finalTitle}</title>

<!-- Métadonnées de base -->
<meta name="description" content={finalDescription} />
{keywordsContent && <meta name="keywords" content={keywordsContent} />}
{author && <meta name="author" content={author} />}

<!-- URL canonique -->
<link rel="canonical" href={finalCanonicalUrl} />

<!-- Directive robots -->
{noindex && <meta name="robots" content="noindex, nofollow" />}

<!-- Open Graph / Facebook -->
<meta property="og:title" content={finalOgTitle} />
<meta property="og:description" content={finalOgDescription} />
<meta property="og:type" content={ogType} />
<meta property="og:url" content={finalCanonicalUrl} />
<meta property="og:image" content={siteUtils.getAssetUrl(ogImage)} />
<meta property="og:locale" content={lang === "fr" ? "fr_FR" : "en_US"} />
<meta property="og:site_name" content={siteConfig.title} />

<!-- Twitter Cards -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={finalOgTitle} />
<meta name="twitter:description" content={finalOgDescription} />
<meta name="twitter:image" content={siteUtils.getAssetUrl(ogImage)} />

<!-- Métadonnées d'article (si applicable) -->
{
  ogType === "article" && publishedTime && (
    <meta property="article:published_time" content={publishedTime} />
  )
}
{
  ogType === "article" && modifiedTime && (
    <meta property="article:modified_time" content={modifiedTime} />
  )
}
{
  ogType === "article" && author && (
    <meta property="article:author" content={author} />
  )
}
{
  ogType === "article" &&
    tags.map((tag: string) => <meta property="article:tag" content={tag} />)
}

<!-- Langue de la page -->
<meta name="language" content={lang} />

<!-- Métadonnées pour les moteurs de recherche -->
<meta name="generator" content={Astro.generator} />


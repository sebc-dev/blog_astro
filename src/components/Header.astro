---
// Header.astro - Version modernisÃ©e avec i18n gÃ©nÃ©rique

import { getLangFromUrl, useTranslations, useTranslatedPath } from '../i18n/utils';

// RÃ©cupÃ©ration de la langue depuis l'URL
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

// Interface pour dÃ©finir la structure d'un lien de navigation
interface NavLink {
  href: string;
  key: string; // ClÃ© de traduction au lieu de labels sÃ©parÃ©s
}

interface Props {
  siteName?: string;
  navLinks?: NavLink[];
}

const {
  siteName = "sebc.dev",
  navLinks = [
    { href: "/", key: "nav.home" },
    { href: "/about", key: "nav.about" },
    { href: "/services", key: "nav.services" },
    { href: "/contact", key: "nav.contact" },
  ],
} = Astro.props;

// GÃ©nÃ©ration des liens traduits
const translatedNavLinks = navLinks.map(link => ({
  ...link,
  href: translatePath(link.href),
  label: t(link.key as any)
}));

// URLs pour le changement de langue
const currentPath = Astro.url.pathname.replace(/^\/[a-z]{2}/, '') || '/';
const enUrl = lang === 'en' ? Astro.url.pathname : currentPath;
const frUrl = lang === 'fr' ? Astro.url.pathname : `/fr${currentPath}`;
---

<!-- Header Desktop (visible sur grand Ã©cran uniquement) -->
<header
  id="desktop-header"
  class="bg-base-100/95 border-base-300/20 fixed top-0 right-0 left-0 z-50 hidden border-b backdrop-blur-sm transition-all duration-300 lg:block"
>
  <div class="navbar mx-auto max-w-7xl px-4">
    <!-- Logo Ã  gauche -->
    <div class="navbar-start">
      <a
        href={translatePath("/")}
        class="from-primary to-secondary bg-gradient-to-r bg-clip-text font-mono text-xl font-bold text-transparent"
      >
        {siteName}
      </a>
    </div>

    <!-- Navigation principale (desktop) -->
    <div class="navbar-center">
      <ul class="menu menu-horizontal px-1">
        {
          translatedNavLinks.map((link) => (
            <li>
              <a
                href={link.href}
                class="nav-link hover:bg-primary hover:text-primary-content transition-colors duration-200"
                aria-current={Astro.url.pathname === link.href ? 'page' : undefined}
              >
                {link.label}
              </a>
            </li>
          ))
        }
      </ul>
    </div>

    <!-- Droite : SÃ©lecteur langue et theme toggle -->
    <div class="navbar-end flex items-center gap-2">
      <!-- SÃ©lecteur de langue -->
      <div class="dropdown dropdown-end">
        <button
          class="btn btn-ghost btn-sm"
          aria-haspopup="true"
          aria-expanded="false"
          aria-controls="desktop-lang-menu"
          aria-label={t('languageSwitcher.label')}
        >
          <span id="current-lang">{lang.toUpperCase()}</span>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="12"
            height="12"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M6 9l6 6 6-6"></path>
          </svg>
        </button>
        <ul
          id="desktop-lang-menu"
          tabindex="0"
          class="dropdown-content menu bg-base-100 rounded-box border-base-300 z-[1] w-24 border p-2 shadow-lg"
          role="menu"
        >
          <li role="none">
            <a
              href={enUrl}
              class="lang-option"
              role="menuitem"
              aria-current={lang === 'en' ? 'true' : 'false'}
            >
              ðŸ‡ºðŸ‡¸ EN
            </a>
          </li>
          <li role="none">
            <a
              href={frUrl}
              class="lang-option"
              role="menuitem"
              aria-current={lang === 'fr' ? 'true' : 'false'}
            >
              ðŸ‡«ðŸ‡· FR
            </a>
          </li>
        </ul>
      </div>

      <!-- Theme Toggle avec icÃ´nes intÃ©grÃ©es -->
      <label
        class="theme-switch relative inline-flex cursor-pointer items-center"
        aria-label={t('theme.toggle')}
      >
        <input
          type="checkbox"
          value="dark"
          class="theme-controller sr-only"
          id="theme-toggle"
        />
        <div
          class="theme-switch-track relative h-6 w-12 rounded-full bg-gradient-to-r from-gray-300 to-gray-400 transition-all duration-300 ease-in-out"
        >
          <div
            class="theme-switch-thumb absolute top-0.5 left-0.5 flex h-5 w-5 items-center justify-center rounded-full bg-white shadow-md transition-all duration-300 ease-in-out"
          >
            <!-- IcÃ´ne soleil (mode clair) -->
            <svg
              class="theme-icon-sun h-3 w-3 text-gray-600 transition-all duration-300 ease-in-out"
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              fill="currentColor"
              aria-label={t('theme.light')}
            >
              <circle cx="12" cy="12" r="5" fill="currentColor"></circle>
              <g stroke="currentColor" stroke-width="2" stroke-linecap="round">
                <line x1="12" y1="1" x2="12" y2="3"></line>
                <line x1="12" y1="21" x2="12" y2="23"></line>
                <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
                <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
                <line x1="1" y1="12" x2="3" y2="12"></line>
                <line x1="21" y1="12" x2="23" y2="12"></line>
                <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
                <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
              </g>
            </svg>
            <!-- IcÃ´ne lune (mode sombre) -->
            <svg
              class="theme-icon-moon absolute top-1/2 left-1/2 h-3 w-3 -translate-x-1/2 -translate-y-1/2 text-gray-500 opacity-0 transition-all duration-300 ease-in-out"
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              fill="currentColor"
              aria-label={t('theme.dark')}
            >
              <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
            </svg>
          </div>
        </div>
      </label>
    </div>
  </div>
</header>

<!-- Header Mobile (visible sur petit Ã©cran uniquement) -->
<header
  id="mobile-header"
  class="bg-base-100/95 border-base-300/20 fixed top-0 right-0 left-0 z-50 border-b backdrop-blur-sm transition-all duration-300 lg:hidden"
>
  <div
    class="flex items-center justify-between px-4 py-2"
    style="height: 64px;"
  >
    <!-- Logo -->
    <a
      href={translatePath("/")}
      class="from-primary to-secondary bg-gradient-to-r bg-clip-text font-mono text-xl font-bold text-transparent"
    >
      {siteName}
    </a>

    <!-- Bouton hamburger -->
    <button
      id="mobile-menu-toggle"
      class="btn btn-square btn-ghost relative"
      aria-label="Toggle mobile menu"
      aria-expanded="false"
      aria-controls="mobile-menu-content"
    >
      <div class="hamburger-icon">
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
      </div>
    </button>
  </div>
</header>

<!-- Menu mobile overlay (visible uniquement sur mobile) -->
<div
  id="mobile-overlay"
  class="pointer-events-none fixed inset-0 z-40 bg-black/50 opacity-0 backdrop-blur-sm transition-opacity duration-300 lg:hidden"
>
  <div
    id="mobile-menu-content"
    class="bg-base-100 fixed top-0 right-0 flex h-full w-full translate-x-full transform flex-col transition-transform duration-300"
  >
    <!-- Navigation mobile -->
    <div class="flex h-full flex-col justify-center px-6">
      <!-- Liens de navigation -->
      <nav class="flex flex-1 items-center justify-center">
        <ul class="menu w-full max-w-md" role="menu">
          {
            translatedNavLinks.map((link) => (
              <li class="mb-4" role="none">
                <a
                  href={link.href}
                  class="mobile-nav-link hover:bg-primary hover:text-primary-content block py-4 text-center text-xl font-medium transition-colors duration-200"
                  role="menuitem"
                  aria-current={Astro.url.pathname === link.href ? 'page' : undefined}
                >
                  {link.label}
                </a>
              </li>
            ))
          }
        </ul>
      </nav>

      <!-- ContrÃ´les en bas du menu -->
      <div class="flex items-center justify-center gap-6 pb-8">
        <!-- SÃ©lecteur de langue mobile -->
        <div class="dropdown dropdown-top">
          <button
            class="btn btn-ghost btn-sm"
            aria-haspopup="true"
            aria-expanded="false"
            aria-controls="mobile-lang-menu"
            aria-label={t('languageSwitcher.label')}
          >
            <span id="mobile-current-lang">{lang.toUpperCase()}</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="12"
              height="12"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="rotate-180 transform"
            >
              <path d="M6 9l6 6 6-6"></path>
            </svg>
          </button>
          <ul
            id="mobile-lang-menu"
            tabindex="0"
            class="dropdown-content menu bg-base-100 rounded-box border-base-300 z-[1] w-24 border p-2 shadow-lg"
            role="menu"
          >
            <li role="none">
              <a
                href={enUrl}
                class="mobile-lang-option"
                role="menuitem"
                aria-current={lang === 'en' ? 'true' : 'false'}
              >
                ðŸ‡ºðŸ‡¸ EN
              </a>
            </li>
            <li role="none">
              <a
                href={frUrl}
                class="mobile-lang-option"
                role="menuitem"
                aria-current={lang === 'fr' ? 'true' : 'false'}
              >
                ðŸ‡«ðŸ‡· FR
              </a>
            </li>
          </ul>
        </div>

        <!-- Theme Toggle mobile -->
        <label
          class="theme-switch relative inline-flex cursor-pointer items-center"
          aria-label={t('theme.toggle')}
        >
          <input
            type="checkbox"
            value="dark"
            class="theme-controller sr-only"
            id="mobile-theme-toggle"
          />
          <div
            class="theme-switch-track relative h-6 w-12 rounded-full bg-gradient-to-r from-gray-300 to-gray-400 transition-all duration-300 ease-in-out"
          >
            <div
              class="theme-switch-thumb absolute top-0.5 left-0.5 flex h-5 w-5 items-center justify-center rounded-full bg-white shadow-md transition-all duration-300 ease-in-out"
            >
              <!-- IcÃ´ne soleil (mode clair) -->
              <svg
                class="theme-icon-sun h-3 w-3 text-gray-600 transition-all duration-300 ease-in-out"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="currentColor"
                aria-label={t('theme.light')}
              >
                <circle cx="12" cy="12" r="5" fill="currentColor"></circle>
                <g
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                >
                  <line x1="12" y1="1" x2="12" y2="3"></line>
                  <line x1="12" y1="21" x2="12" y2="23"></line>
                  <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
                  <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
                  <line x1="1" y1="12" x2="3" y2="12"></line>
                  <line x1="21" y1="12" x2="23" y2="12"></line>
                  <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
                  <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
                </g>
              </svg>
              <!-- IcÃ´ne lune (mode sombre) -->
              <svg
                class="theme-icon-moon absolute top-1/2 left-1/2 h-3 w-3 -translate-x-1/2 -translate-y-1/2 text-gray-500 opacity-0 transition-all duration-300 ease-in-out"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="currentColor"
                aria-label={t('theme.dark')}
              >
                <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"
                ></path>
              </svg>
            </div>
          </div>
        </label>
      </div>
    </div>
  </div>
</div>

<script>
  // Script simplifiÃ© pour le menu mobile et le thÃ¨me uniquement
  // Plus besoin de la gestion complexe des langues

  class HeaderManager {
    private mobileMenuToggle: HTMLElement | null;
    private mobileOverlay: HTMLElement | null;
    private mobileMenuContent: HTMLElement | null;
    private isMenuOpen = false;

    constructor() {
      this.mobileMenuToggle = document.getElementById('mobile-menu-toggle');
      this.mobileOverlay = document.getElementById('mobile-overlay');
      this.mobileMenuContent = document.getElementById('mobile-menu-content');

      this.init();
    }

    private init(): void {
      this.bindEvents();
      this.initializeTheme();
    }

    private bindEvents(): void {
      // Menu mobile toggle
      this.mobileMenuToggle?.addEventListener('click', () => {
        this.toggleMobileMenu();
      });

      // Fermer le menu en cliquant sur l'overlay
      this.mobileOverlay?.addEventListener('click', (e) => {
        if (e.target === this.mobileOverlay) {
          this.closeMobileMenu();
        }
      });

      // Fermer le menu avec Escape
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && this.isMenuOpen) {
          this.closeMobileMenu();
        }
      });

      // Fermer les dropdowns quand on clique ailleurs
      document.addEventListener('click', (e) => {
        const target = e.target as HTMLElement;
        if (!target.closest('.dropdown')) {
          this.closeAllDropdowns();
        }
      });
    }

    private toggleMobileMenu(): void {
      if (this.isMenuOpen) {
        this.closeMobileMenu();
      } else {
        this.openMobileMenu();
      }
    }

    private openMobileMenu(): void {
      this.isMenuOpen = true;
      this.mobileMenuToggle?.classList.add('menu-open');
      this.mobileMenuToggle?.setAttribute('aria-expanded', 'true');
      this.mobileOverlay?.classList.add('pointer-events-auto', 'opacity-100');
      this.mobileMenuContent?.classList.add('translate-x-0');
      this.mobileMenuContent?.classList.remove('translate-x-full');
      document.body.style.overflow = 'hidden';
    }

    private closeMobileMenu(): void {
      this.isMenuOpen = false;
      this.mobileMenuToggle?.classList.remove('menu-open');
      this.mobileMenuToggle?.setAttribute('aria-expanded', 'false');
      this.mobileOverlay?.classList.remove('pointer-events-auto', 'opacity-100');
      this.mobileMenuContent?.classList.remove('translate-x-0');
      this.mobileMenuContent?.classList.add('translate-x-full');
      document.body.style.overflow = '';
    }

    private closeAllDropdowns(): void {
      const dropdowns = document.querySelectorAll('.dropdown [aria-expanded="true"]');
      dropdowns.forEach(dropdown => {
        dropdown.setAttribute('aria-expanded', 'false');
      });
    }

    private initializeTheme(): void {
      // DaisyUI gÃ¨re dÃ©jÃ  le thÃ¨me via les classes CSS
      // On s'assure juste que les contrÃ´les sont synchronisÃ©s
      const themeToggle = document.getElementById('theme-toggle') as HTMLInputElement;
      const mobileThemeToggle = document.getElementById('mobile-theme-toggle') as HTMLInputElement;

      if (themeToggle && mobileThemeToggle) {
        // Synchroniser les deux toggles
        themeToggle.addEventListener('change', () => {
          mobileThemeToggle.checked = themeToggle.checked;
        });

        mobileThemeToggle.addEventListener('change', () => {
          themeToggle.checked = mobileThemeToggle.checked;
        });
      }
    }
  }

  // Initialisation automatique
  if (typeof window !== 'undefined') {
    document.addEventListener('DOMContentLoaded', () => {
      new HeaderManager();
    });
  }
</script>

<style>
/* Styles conservÃ©s de l'original mais simplifiÃ©s */
#mobile-menu-content {
  box-shadow: -4px 0 15px rgba(0, 0, 0, 0.1);
  }

#desktop-header,
#mobile-header {
  transition:
  background-color 0.3s ease,
  border-color 0.3s ease;
  }

.navbar svg {
  opacity: 0.8;
  transition: opacity 0.2s ease;
  }

.navbar svg:hover {
  opacity: 1;
  }

.mobile-nav-link {
  border-radius: 0.75rem;
  min-height: 3.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  }

/* Styles pour le switch de thÃ¨me */
.theme-icon-sun {
  opacity: 1;
  transform: rotate(0deg) scale(1);
  z-index: 2;
  }

.theme-icon-moon {
  opacity: 0;
  transform: rotate(-180deg) scale(0.8);
  z-index: 1;
  visibility: hidden;
  }

.theme-switch input:checked + .theme-switch-track {
  background: linear-gradient(to right, #4b5563, #6b7280);
  }

.theme-switch input:checked + .theme-switch-track .theme-switch-thumb {
  transform: translateX(1.5rem);
  }

.theme-switch input:checked + .theme-switch-track .theme-icon-sun {
  opacity: 0;
  transform: rotate(180deg) scale(0.8);
  visibility: hidden;
  z-index: 1;
  }

.theme-switch input:checked + .theme-switch-track .theme-icon-moon {
  opacity: 1;
  transform: rotate(0deg) scale(1);
  visibility: visible;
  z-index: 2;
  }

#mobile-theme-toggle:checked + .theme-switch-track .theme-switch-thumb {
  transform: translateX(1.25rem);
  }

.theme-icon-sun,
.theme-icon-moon {
  transform-origin: center;
  }

.theme-switch:hover .theme-switch-track {
  box-shadow: 0 0 0 2px rgba(156, 163, 175, 0.3);
  }

.theme-switch-thumb {
  transition:
  transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),
  box-shadow 0.2s ease;
  }

.theme-switch input:focus + .theme-switch-track .theme-switch-thumb {
  box-shadow: 0 0 0 2px rgba(156, 163, 175, 0.5);
  }

/* Styles pour le hamburger menu */
.hamburger-icon {
  width: 24px;
  height: 18px;
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  }

.hamburger-line {
  width: 100%;
  height: 2px;
  background-color: currentColor;
  border-radius: 1px;
  transition: all 0.3s ease;
  transform-origin: center;
  display: block;
  }

#mobile-menu-toggle {
  color: inherit;
  }

#mobile-menu-toggle.menu-open {
  color: hsl(var(--p));
  }

#mobile-menu-toggle.menu-open .hamburger-line:nth-child(1) {
  transform: translateY(8px) rotate(45deg);
  }

#mobile-menu-toggle.menu-open .hamburger-line:nth-child(2) {
  opacity: 0;
  transform: scaleX(0);
  }

#mobile-menu-toggle.menu-open .hamburger-line:nth-child(3) {
  transform: translateY(-8px) rotate(-45deg);
  }

#mobile-menu-toggle:focus-visible {
  outline: 2px solid hsl(var(--p));
  outline-offset: 2px;
  }

/* AmÃ©lioration des dropdowns */
.dropdown-content {
  animation: dropdown-appear 0.2s ease-out;
  }

@keyframes dropdown-appear {
  from {
  opacity: 0;
  transform: translateY(-10px);
  }
  to {
  opacity: 1;
  transform: translateY(0);
  }
  }

/* Indique la page actuelle */
[aria-current="page"] {
  background-color: hsl(var(--p));
  color: hsl(var(--pc));
  }

[aria-current="true"] {
  font-weight: bold;
  color: hsl(var(--p));
  }
</style>
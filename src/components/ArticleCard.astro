---
import { getLangFromUrl, useTranslations } from "../i18n/utils";

export interface Props {
  title: string;
  description: string;
  heroImage?: string;
  pubDate: Date;
  category?: string;
  tag?: string;
  slug: string;
  readingTime?: number;
}

const {
  title,
  description,
  heroImage,
  pubDate,
  category = "Article",
  tag,
  slug,
  readingTime = 3,
} = Astro.props;

// Système d'internationalisation
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Formatage de la date
const locale = lang === "fr" ? "fr-FR" : "en-US";
const formattedDate = pubDate.toLocaleDateString(locale, {
  day: "numeric",
  month: "short",
  year: "numeric",
});

// Limite l'extrait pour les cartes
const shortDescription =
  description.length > 120
    ? description.substring(0, 120) + "..."
    : description;
---

<article
  class="card bg-base-300 border-base-content/10 group h-full overflow-hidden border shadow-lg transition-all duration-300 hover:shadow-xl"
  data-cy="article-card"
  data-article-slug={slug}
>
  <!-- Image de carte -->
  {
    heroImage && (
      <figure class="aspect-video overflow-hidden" data-cy="article-image">
        <img
          src={heroImage}
          alt={title}
          class="h-full w-full object-cover transition-transform duration-300 group-hover:scale-105"
          loading="lazy"
        />
      </figure>
    )
  }

  <div
    class="card-body flex flex-col justify-between p-4"
    data-cy="article-content"
  >
    <!-- Métadonnées compactes -->
    <div class="mb-3 flex flex-wrap gap-1" data-cy="article-metadata">
      {
        category && (
          <span class="badge badge-primary badge-sm" data-cy="article-category">
            {category}
          </span>
        )
      }
      {
        tag && (
          <span class="badge badge-outline badge-sm" data-cy="article-tag">
            {tag}
          </span>
        )
      }
      <span class="text-secondary-accessible ml-auto text-xs" data-cy="article-date">
        {formattedDate}
      </span>
    </div>

    <!-- Titre compact -->
    <h3
      class="card-title group-hover:text-primary mb-3 line-clamp-2 text-lg leading-tight font-bold transition-colors"
      data-cy="article-title"
    >
      <a href={`/blog/${slug}`} class="link-hover" data-cy="article-title-link">
        {title}
      </a>
    </h3>

    <!-- Extrait court avec ellipsis -->
    <p
      class="text-muted-accessible mb-4 line-clamp-2 flex-grow text-sm leading-relaxed"
      data-cy="article-description"
    >
      {shortDescription}
    </p>

    <!-- Footer compact -->
    <div
      class="card-actions mt-auto items-center justify-between"
      data-cy="article-footer"
    >
      <span class="text-secondary-accessible text-xs" data-cy="article-reading-time">
        {readingTime} min
      </span>

      <a
        href={`/blog/${slug}`}
        class="btn btn-primary btn-xs"
        aria-label={`Lire: ${title}`}
        data-cy="article-read-button"
      >
        {t("blog.read")}
        <svg
          width="12"
          height="12"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <path d="M7 17L17 7"></path>
          <path d="M7 7h10v10"></path>
        </svg>
      </a>
    </div>
  </div>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

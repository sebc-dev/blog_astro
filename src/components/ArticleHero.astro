---
import { getLangFromUrl, useTranslations } from '../i18n/utils';

export interface Props {
  title: string;
  description: string;
  heroImage?: string;
  pubDate: Date;
  author: string;
  category?: string;
  tag?: string;
  slug: string;
  readingTime?: number;
}

const {
  title,
  description,
  heroImage,
  pubDate,
  author,
  category = "Article",
  tag,
  slug,
  readingTime = 5,
} = Astro.props;

// Système d'internationalisation
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Formatage de la date
const formattedDate = pubDate.toLocaleDateString("fr-FR", {
  year: "numeric",
  month: "long",
  day: "numeric",
});
---

<article class="h-[calc(100vh-6rem)] mt-4 flex flex-col bg-base-200 shadow-xl overflow-hidden group">
  <!-- Image Hero -->
  {
    heroImage && (
      <figure class="flex-1 min-h-0 overflow-hidden">
        <img
          src={heroImage}
          alt={title}
          class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
          loading="lazy"
        />
      </figure>
    )
  }

  <div class="flex-shrink-0 p-6 pt-16 bg-base-100">
    <!-- Métadonnées -->
    <div class="flex flex-wrap gap-2 mb-4">
      {
        category && (
          <span class="badge badge-primary badge-lg">
            {category}
          </span>
        )
      }
      {
        tag && (
          <span class="badge badge-secondary badge-outline">
            {tag}
          </span>
        )
      }
      <span class="text-sm text-base-content/70 ml-auto">
        {formattedDate}
      </span>
    </div>

    <!-- Titre Hero (plus grand) -->
    <h2 class="text-2xl lg:text-3xl font-bold leading-tight mb-4 group-hover:text-primary transition-colors">
      <a href={`/blog/${slug}`} class="link-hover">
        {title}
      </a>
    </h2>

    <!-- Extrait plus long pour le hero -->
    <p class="text-base-content/80 text-lg leading-relaxed mb-6 line-clamp-3">
      {description}
    </p>

    <!-- Footer avec auteur, temps de lecture et bouton -->
    <div class="flex justify-between items-center">
      <div class="flex items-center gap-2 text-sm text-base-content/70">
        <span>Par {author}</span>
        <span>•</span>
        <span>{readingTime} min de lecture</span>
      </div>
      
      <a
        href={`/blog/${slug}`}
        class="btn btn-primary btn-sm"
        aria-label={`Lire l'article: ${title}`}
      >
        {t('blog.readMore')}
        <svg
          width="16"
          height="16"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <path d="M7 17L17 7" />
          <path d="M7 7h10v10" />
        </svg>
      </a>
    </div>
  </div>
</article>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style> 